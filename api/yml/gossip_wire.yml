--- # LNP API definition file; autogenerated from c-lightning CSV API file

types:
  - &chainparams { snake: chainparams, pascal: Chainparams, camel: chainparams }
  - &feature_set { snake: feature_set, pascal: FeatureSet, camel: featureSet }
  - &node_id { snake: node_id, pascal: NodeId, camel: nodeId }
  - &u8 { snake: u8, pascal: U8, camel: u8 }
  - &u16 { snake: u16, pascal: U16, camel: u16 }
  - &wireaddr { snake: wireaddr, pascal: Wireaddr, camel: wireaddr }
  - &u32 { snake: u32, pascal: U32, camel: u32 }
  - &bool { snake: bool, pascal: Bool, camel: bool }
  - &gossip_getnodes_entry { snake: gossip_getnodes_entry, pascal: GossipGetnodesEntry, camel: gossipGetnodesEntry }
  - &amount_msat { snake: amount_msat, pascal: AmountMsat, camel: amountMsat }
  - &u64 { snake: u64, pascal: U64, camel: u64 }
  - &exclude_entry { snake: exclude_entry, pascal: ExcludeEntry, camel: excludeEntry }
  - &route_hop { snake: route_hop, pascal: RouteHop, camel: routeHop }
  - &short_channel_id { snake: short_channel_id, pascal: ShortChannelId, camel: shortChannelId }
  - &gossip_getchannels_entry { snake: gossip_getchannels_entry, pascal: GossipGetchannelsEntry, camel: gossipGetchannelsEntry }
  - &amount_sat { snake: amount_sat, pascal: AmountSat, camel: amountSat }
  - &route_info { snake: route_info, pascal: RouteInfo, camel: routeInfo }

messages:
  3000: &gossipctl_init
    - { name: chainparams, type: *chainparams }
    - { name: our_features, type: *feature_set }
    - { name: id, type: *node_id }
    - { name: rgb, type: *u8, len: 3 }
    - { name: alias, type: *u8, len: 32 }
    - { name: num_announcable, type: *u16 }
    - { name: announcable, type: *wireaddr, len_var: num_announcable }
    - { name: dev_gossip_time, type: *u32, optional: true }
    - { name: dev_fast_gossip, type: *bool }
    - { name: dev_fast_gossip_prune, type: *bool }
  3001: &gossip_dev_set_time
    - { name: dev_gossip_time, type: *u32 }
  3005: &gossip_getnodes_request
    - { name: id, type: *node_id, optional: true }
  3105: &gossip_getnodes_reply
    - { name: num_nodes, type: *u32 }
    - { name: nodes, type: *gossip_getnodes_entry, len_var: num_nodes }
  3006: &gossip_getroute_request
    - { name: source, type: *node_id, optional: true }
    - { name: destination, type: *node_id }
    - { name: msatoshi, type: *amount_msat }
    - { name: riskfactor_millionths, type: *u64 }
    - { name: final_cltv, type: *u32 }
    - { name: fuzz_millionths, type: *u64 }
    - { name: num_excluded, type: *u16 }
    - { name: excluded, type: *exclude_entry, len_var: num_excluded }
    - { name: max_hops, type: *u32 }
  3106: &gossip_getroute_reply
    - { name: num_hops, type: *u16 }
    - { name: hops, type: *route_hop, len_var: num_hops }
  3007: &gossip_getchannels_request
    - { name: short_channel_id, type: *short_channel_id, optional: true }
    - { name: source, type: *node_id, optional: true }
    - { name: prev, type: *short_channel_id, optional: true }
  3107: &gossip_getchannels_reply
    - { name: complete, type: *bool }
    - { name: num_channels, type: *u32 }
    - { name: nodes, type: *gossip_getchannels_entry, len_var: num_channels }
  3008: &gossip_ping
    - { name: id, type: *node_id }
    - { name: num_pong_bytes, type: *u16 }
    - { name: len, type: *u16 }
  3108: &gossip_ping_reply
    - { name: id, type: *node_id }
    - { name: sent, type: *bool }
    - { name: totlen, type: *u16 }
  3030: &gossip_dev_set_max_scids_encode_size
    - { name: max, type: *u32 }
  3010: &gossip_get_stripped_cupdate
    - { name: channel_id, type: *short_channel_id }
  3110: &gossip_get_stripped_cupdate_reply
    - { name: stripped_update_len, type: *u16 }
    - { name: stripped_update, type: *u8, len_var: stripped_update_len }
  3027: &gossip_local_channel_close
    - { name: short_channel_id, type: *short_channel_id }
  3018: &gossip_get_txout
    - { name: short_channel_id, type: *short_channel_id }
  3118: &gossip_get_txout_reply
    - { name: short_channel_id, type: *short_channel_id }
    - { name: satoshis, type: *amount_sat }
    - { name: len, type: *u16 }
    - { name: outscript, type: *u8, len_var: len }
  3021: &gossip_payment_failure
    - { name: erring_node, type: *node_id }
    - { name: erring_channel, type: *short_channel_id }
    - { name: erring_channel_direction, type: *u8 }
    - { name: len, type: *u16 }
    - { name: error, type: *u8, len_var: len }
  3024: &gossip_outpoint_spent
    - { name: short_channel_id, type: *short_channel_id }
  3032: &gossip_dev_suppress
  3033: &gossip_dev_memleak
  3133: &gossip_dev_memleak_reply
    - { name: leak, type: *bool }
  3034: &gossip_dev_compact_store
  3134: &gossip_dev_compact_store_reply
    - { name: success, type: *bool }
  3025: &gossip_get_incoming_channels
  3125: &gossip_get_incoming_channels_reply
    - { name: num_public, type: *u16 }
    - { name: public_route_info, type: *route_info, len_var: num_public }
    - { name: public_deadends, type: *bool, len_var: num_public }
    - { name: num_private, type: *u16 }
    - { name: private_route_info, type: *route_info, len_var: num_private }
    - { name: private_deadends, type: *bool, len_var: num_private }
  3026: &gossip_new_blockheight
    - { name: blockheight, type: *u32 }
...
