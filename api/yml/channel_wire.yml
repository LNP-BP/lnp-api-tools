--- # LNP API definition file; autogenerated from c-lightning CSV API file

types:
  - &chainparams { snake: chainparams, pascal: Chainparams, camel: chainparams }
  - &feature_set { snake: feature_set, pascal: FeatureSet, camel: featureSet }
  - &bitcoin_txid { snake: bitcoin_txid, pascal: BitcoinTxid, camel: bitcoinTxid }
  - &u16 { snake: u16, pascal: U16, camel: u16 }
  - &amount_sat { snake: amount_sat, pascal: AmountSat, camel: amountSat }
  - &u32 { snake: u32, pascal: U32, camel: u32 }
  - &channel_config { snake: channel_config, pascal: ChannelConfig, camel: channelConfig }
  - &fee_states { snake: fee_states, pascal: FeeStates, camel: feeStates }
  - &bitcoin_signature { snake: bitcoin_signature, pascal: BitcoinSignature, camel: bitcoinSignature }
  - &per_peer_state { snake: per_peer_state, pascal: PerPeerState, camel: perPeerState }
  - &pubkey { snake: pubkey, pascal: Pubkey, camel: pubkey }
  - &basepoints { snake: basepoints, pascal: Basepoints, camel: basepoints }
  - &u8 { snake: u8, pascal: U8, camel: u8 }
  - &amount_msat { snake: amount_msat, pascal: AmountMsat, camel: amountMsat }
  - &node_id { snake: node_id, pascal: NodeId, camel: nodeId }
  - &bool { snake: bool, pascal: Bool, camel: bool }
  - &changed_htlc { snake: changed_htlc, pascal: ChangedHtlc, camel: changedHtlc }
  - &u64 { snake: u64, pascal: U64, camel: u64 }
  - &existing_htlc { snake: existing_htlc, pascal: ExistingHtlc, camel: existingHtlc }
  - &short_channel_id { snake: short_channel_id, pascal: ShortChannelId, camel: shortChannelId }
  - &secret { snake: secret, pascal: Secret, camel: secret }
  - &secp256k1_ecdsa_signature { snake: secp256k1_ecdsa_signature, pascal: Secp256k1EcdsaSignature, camel: secp256k1EcdsaSignature }
  - &penalty_base { snake: penalty_base, pascal: PenaltyBase, camel: penaltyBase }
  - &sha256 { snake: sha256, pascal: Sha256, camel: sha256 }
  - &wirestring { snake: wirestring, pascal: Wirestring, camel: wirestring }
  - &fulfilled_htlc { snake: fulfilled_htlc, pascal: FulfilledHtlc, camel: fulfilledHtlc }
  - &failed_htlc { snake: failed_htlc, pascal: FailedHtlc, camel: failedHtlc }
  - &added_htlc { snake: added_htlc, pascal: AddedHtlc, camel: addedHtlc }
  - &bitcoin_tx { snake: bitcoin_tx, pascal: BitcoinTx, camel: bitcoinTx }
  - &onionmsg_path { snake: onionmsg_path, pascal: OnionmsgPath, camel: onionmsgPath }

messages:
  1000: &channel_init
    - { name: chainparams, type: *chainparams }
    - { name: our_features, type: *feature_set }
    - { name: funding_txid, type: *bitcoin_txid }
    - { name: funding_txout, type: *u16 }
    - { name: funding_satoshi, type: *amount_sat }
    - { name: minimum_depth, type: *u32 }
    - { name: our_config, type: *channel_config }
    - { name: their_config, type: *channel_config }
    - { name: fee_states, type: *fee_states }
    - { name: feerate_min, type: *u32 }
    - { name: feerate_max, type: *u32 }
    - { name: feerate_penalty, type: *u32 }
    - { name: first_commit_sig, type: *bitcoin_signature }
    - { name: per_peer_state, type: *per_peer_state }
    - { name: remote_fundingkey, type: *pubkey }
    - { name: remote_basepoints, type: *basepoints }
    - { name: remote_per_commit, type: *pubkey }
    - { name: old_remote_per_commit, type: *pubkey }
    - { name: opener, type: *u8, enum: side }
    - { name: fee_base, type: *u32 }
    - { name: fee_proportional, type: *u32 }
    - { name: local_msatoshi, type: *amount_msat }
    - { name: our_basepoints, type: *basepoints }
    - { name: our_funding_pubkey, type: *pubkey }
    - { name: local_node_id, type: *node_id }
    - { name: remote_node_id, type: *node_id }
    - { name: commit_msec, type: *u32 }
    - { name: cltv_delta, type: *u16 }
    - { name: last_was_revoke, type: *bool }
    - { name: num_last_sent_commit, type: *u16 }
    - { name: last_sent_commit, type: *changed_htlc, len_var: num_last_sent_commit }
    - { name: next_index_local, type: *u64 }
    - { name: next_index_remote, type: *u64 }
    - { name: revocations_received, type: *u64 }
    - { name: next_htlc_id, type: *u64 }
    - { name: num_existing_htlcs, type: *u16 }
    - { name: htlcs, type: *existing_htlc, len_var: num_existing_htlcs }
    - { name: local_funding_locked, type: *bool }
    - { name: remote_funding_locked, type: *bool }
    - { name: funding_short_id, type: *short_channel_id }
    - { name: reestablish, type: *bool }
    - { name: send_shutdown, type: *bool }
    - { name: remote_shutdown_received, type: *bool }
    - { name: final_scriptpubkey_len, type: *u16 }
    - { name: final_scriptpubkey, type: *u8, len_var: final_scriptpubkey_len }
    - { name: flags, type: *u8 }
    - { name: init_peer_pkt_len, type: *u16 }
    - { name: init_peer_pkt, type: *u8, len_var: init_peer_pkt_len }
    - { name: reached_announce_depth, type: *bool }
    - { name: last_remote_secret, type: *secret }
    - { name: flen, type: *u16 }
    - { name: their_features, type: *u8, len_var: flen }
    - { name: upfront_shutdown_script_len, type: *u16 }
    - { name: upfront_shutdown_script, type: *u8, len_var: upfront_shutdown_script_len }
    - { name: remote_ann_node_sig, type: *secp256k1_ecdsa_signature, optional: true }
    - { name: remote_ann_bitcoin_sig, type: *secp256k1_ecdsa_signature, optional: true }
    - { name: option_static_remotekey, type: *bool }
    - { name: dev_fast_gossip, type: *bool }
    - { name: dev_fail_process_onionpacket, type: *bool }
    - { name: num_penalty_bases, type: *u32 }
    - { name: pbases, type: *penalty_base, len_var: num_penalty_bases }
  1002: &channel_funding_depth
    - { name: short_channel_id, type: *short_channel_id, optional: true }
    - { name: depth, type: *u32 }
  1004: &channel_offer_htlc
    - { name: amount_msat, type: *amount_msat }
    - { name: cltv_expiry, type: *u32 }
    - { name: payment_hash, type: *sha256 }
    - { name: onion_routing_packet, type: *u8, len: 1366 }
    - { name: blinding, type: *pubkey, optional: true }
  1104: &channel_offer_htlc_reply
    - { name: id, type: *u64 }
    - { name: len, type: *u16 }
    - { name: failuremsg, type: *u8, len_var: len }
    - { name: failurestr, type: *wirestring }
  1005: &channel_fulfill_htlc
    - { name: fulfilled_htlc, type: *fulfilled_htlc }
  1006: &channel_fail_htlc
    - { name: failed_htlc, type: *failed_htlc }
  1019: &channel_got_funding_locked
    - { name: next_per_commit_point, type: *pubkey }
  1020: &channel_sending_commitsig
    - { name: commitnum, type: *u64 }
    - { name: pbase, type: *penalty_base, optional: true }
    - { name: fee_states, type: *fee_states }
    - { name: num_changed, type: *u16 }
    - { name: changed, type: *changed_htlc, len_var: num_changed }
    - { name: commit_sig, type: *bitcoin_signature }
    - { name: num_htlc_sigs, type: *u16 }
    - { name: htlc_sigs, type: *secp256k1_ecdsa_signature, len_var: num_htlc_sigs }
  1120: &channel_sending_commitsig_reply
  1021: &channel_got_commitsig
    - { name: commitnum, type: *u64 }
    - { name: fee_states, type: *fee_states }
    - { name: signature, type: *bitcoin_signature }
    - { name: num_htlcs, type: *u16 }
    - { name: htlc_signature, type: *secp256k1_ecdsa_signature, len_var: num_htlcs }
    - { name: num_added, type: *u16 }
    - { name: added, type: *added_htlc, len_var: num_added }
    - { name: num_fulfilled, type: *u16 }
    - { name: fulfilled, type: *fulfilled_htlc, len_var: num_fulfilled }
    - { name: num_failed, type: *u16 }
    - { name: failed, type: *failed_htlc, len_var: num_failed }
    - { name: num_changed, type: *u16 }
    - { name: changed, type: *changed_htlc, len_var: num_changed }
    - { name: tx, type: *bitcoin_tx }
  1121: &channel_got_commitsig_reply
  1022: &channel_got_revoke
    - { name: revokenum, type: *u64 }
    - { name: per_commitment_secret, type: *secret }
    - { name: next_per_commit_point, type: *pubkey }
    - { name: fee_states, type: *fee_states }
    - { name: num_changed, type: *u16 }
    - { name: changed, type: *changed_htlc, len_var: num_changed }
    - { name: pbase, type: *penalty_base, optional: true }
    - { name: penalty_tx, type: *bitcoin_tx, optional: true }
  1122: &channel_got_revoke_reply
  1023: &channel_send_shutdown
    - { name: shutdown_len, type: *u16 }
    - { name: shutdown_scriptpubkey, type: *u8, len_var: shutdown_len }
  1024: &channel_got_shutdown
    - { name: scriptpubkey_len, type: *u16 }
    - { name: scriptpubkey, type: *u8, len_var: scriptpubkey_len }
  1025: &channel_shutdown_complete
    - { name: per_peer_state, type: *per_peer_state }
  1026: &channel_dev_reenable_commit
  1126: &channel_dev_reenable_commit_reply
  1027: &channel_feerates
    - { name: feerate, type: *u32 }
    - { name: min_feerate, type: *u32 }
    - { name: max_feerate, type: *u32 }
    - { name: penalty_feerate, type: *u32 }
  1033: &channel_dev_memleak
  1133: &channel_dev_memleak_reply
    - { name: leak, type: *bool }
  1028: &channel_fail_fallen_behind
    - { name: remote_per_commitment_point, type: *pubkey, optional: true }
  1029: &channel_specific_feerates
    - { name: feerate_base, type: *u32 }
    - { name: feerate_ppm, type: *u32 }
  1017: &channel_got_announcement
    - { name: remote_ann_node_sig, type: *secp256k1_ecdsa_signature }
    - { name: remote_ann_bitcoin_sig, type: *secp256k1_ecdsa_signature }
  1008: &channel_send_error
    - { name: reason, type: *wirestring }
  1108: &channel_send_error_reply
  1142: &got_onionmsg_to_us
    - { name: reply_blinding, type: *pubkey, optional: true }
    - { name: reply_path_len, type: *u16 }
    - { name: reply_path, type: *onionmsg_path, len_var: reply_path_len }
  1143: &got_onionmsg_forward
    - { name: next_scid, type: *short_channel_id, optional: true }
    - { name: next_node_id, type: *node_id, optional: true }
    - { name: next_blinding, type: *pubkey, optional: true }
    - { name: next_onion, type: *u8, len: 1366 }
  1040: &send_onionmsg
    - { name: onion, type: *u8, len: 1366 }
    - { name: blinding, type: *pubkey, optional: true }
...
